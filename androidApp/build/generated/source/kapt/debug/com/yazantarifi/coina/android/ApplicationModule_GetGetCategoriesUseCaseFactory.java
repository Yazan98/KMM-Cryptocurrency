// Generated by Dagger (https://dagger.dev).
package com.yazantarifi.coina.android;

import com.yazantarifi.coina.api.requests.ApplicationApiManager;
import com.yazantarifi.coina.database.CategoriesDataSource;
import com.yazantarifi.coina.useCases.GetCategoriesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_GetGetCategoriesUseCaseFactory implements Factory<GetCategoriesUseCase> {
  private final Provider<ApplicationApiManager> apiManagerProvider;

  private final Provider<CategoriesDataSource> databaseProvider;

  public ApplicationModule_GetGetCategoriesUseCaseFactory(
      Provider<ApplicationApiManager> apiManagerProvider,
      Provider<CategoriesDataSource> databaseProvider) {
    this.apiManagerProvider = apiManagerProvider;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public GetCategoriesUseCase get() {
    return getGetCategoriesUseCase(apiManagerProvider.get(), databaseProvider.get());
  }

  public static ApplicationModule_GetGetCategoriesUseCaseFactory create(
      Provider<ApplicationApiManager> apiManagerProvider,
      Provider<CategoriesDataSource> databaseProvider) {
    return new ApplicationModule_GetGetCategoriesUseCaseFactory(apiManagerProvider, databaseProvider);
  }

  public static GetCategoriesUseCase getGetCategoriesUseCase(ApplicationApiManager apiManager,
      CategoriesDataSource database) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.INSTANCE.getGetCategoriesUseCase(apiManager, database));
  }
}

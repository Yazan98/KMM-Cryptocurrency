// Generated by Dagger (https://dagger.dev).
package com.yazantarifi.coina.android;

import com.yazantarifi.coina.api.requests.ApplicationApiManager;
import com.yazantarifi.coina.useCases.GetCategoryCoinsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_GetGetCategoryCoinsUseCaseFactory implements Factory<GetCategoryCoinsUseCase> {
  private final Provider<ApplicationApiManager> apiManagerProvider;

  public ApplicationModule_GetGetCategoryCoinsUseCaseFactory(
      Provider<ApplicationApiManager> apiManagerProvider) {
    this.apiManagerProvider = apiManagerProvider;
  }

  @Override
  public GetCategoryCoinsUseCase get() {
    return getGetCategoryCoinsUseCase(apiManagerProvider.get());
  }

  public static ApplicationModule_GetGetCategoryCoinsUseCaseFactory create(
      Provider<ApplicationApiManager> apiManagerProvider) {
    return new ApplicationModule_GetGetCategoryCoinsUseCaseFactory(apiManagerProvider);
  }

  public static GetCategoryCoinsUseCase getGetCategoryCoinsUseCase(
      ApplicationApiManager apiManager) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.INSTANCE.getGetCategoryCoinsUseCase(apiManager));
  }
}
